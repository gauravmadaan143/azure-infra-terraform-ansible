trigger:
  branches:
    include:
      - main

variables:
  resource_group: "demo-rg"
  vm_name: "demo-vm"
  location: "westeurope"

stages:
  - stage: Terraform
    jobs:
      - job: TerraformInitPlanApply
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self
          - script: |
              curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip
              unzip terraform.zip
              sudo mv terraform /usr/local/bin/
              terraform -version
            displayName: "Install Terraform"

          - script: |
              cd terraform
              terraform init
            displayName: "Terraform Init"

          - script: |
              cd terraform
              terraform plan -var="location=$(location)" -var="resource_group_name=$(resource_group)" -var="vm_name=$(vm_name)" -var="ssh_public_key=$(SSH_PUBLIC_KEY)"
            displayName: "Terraform Plan"

          - script: |
              cd terraform
              terraform apply -auto-approve -var="location=$(location)" -var="resource_group_name=$(resource_group)" -var="vm_name=$(vm_name)" -var="ssh_public_key=$(SSH_PUBLIC_KEY)"
            displayName: "Terraform Apply"

  - stage: Ansible
    dependsOn: Terraform
    jobs:
      - job: RunAnsible
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self
          - script: |
              sudo apt-get update
              sudo apt-get install -y ansible sshpass
              VM_IP=$(terraform output -raw vm_public_ip)
              echo "VM IP: $VM_IP"
              ansible-playbook -i "$VM_IP," ansible/playbook.yml --user azureuser --private-key ~/.ssh/id_rsa --ssh-extra-args='-o StrictHostKeyChecking=no'
            displayName: "Run Ansible Playbook"


trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraform_version: '1.6.6'
  terraform_folder: 'terraform'
  ansible_folder: 'ansible'

stages:

# ───────────── Stage 1: Install Terraform ─────────────
- stage: InstallTerraform
  jobs:
    - job: InstallTerraformJob
      displayName: "Install Terraform CLI"
      steps:
        - script: |
            echo "Downloading Terraform..."
            curl -sLo terraform.zip https://releases.hashicorp.com/terraform/$(terraform_version)/terraform_$(terraform_version)_linux_amd64.zip
            unzip -o terraform.zip
            sudo mv terraform /usr/local/bin/
            terraform -version
          displayName: "Install Terraform CLI"

# ───────────── Stage 2: Terraform Init ─────────────
- stage: TerraformInit
  dependsOn: InstallTerraform
  jobs:
    - job: InitJob
      displayName: "Terraform Init"
      steps:
        - checkout: self
        - script: |
            cd $(terraform_folder)
            terraform init
          displayName: "Terraform Init"

# ───────────── Stage 3: Terraform Plan ─────────────
- stage: TerraformPlan
  dependsOn: TerraformInit
  jobs:
    - job: PlanJob
      displayName: "Terraform Plan"
      steps:
        - checkout: self
        - script: |
            cd $(terraform_folder)
            terraform plan \
              -var="location=$(location)" \
              -var="resource_group_name=$(resource_group_name)" \
              -var="vm_name=$(vm_name)" \
              -var="ssh_public_key=$(ssh_public_key)" \
              -var="my_ip_address=$(my_ip_address)"
          displayName: "Terraform Plan"

# ───────────── Stage 4: Terraform Apply ─────────────
- stage: TerraformApply
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
    - job: ApplyJob
      displayName: "Terraform Apply"
      steps:
        - checkout: self
        - script: |
            cd $(terraform_folder)
            terraform apply \
              -var="location=$(location)" \
              -var="resource_group_name=$(resource_group_name)" \
              -var="vm_name=$(vm_name)" \
              -var="ssh_public_key=$(ssh_public_key)" \
              -var="my_ip_address=$(my_ip_address)" \
              -auto-approve
          displayName: "Terraform Apply"

# ───────────── Stage 5: Ansible Configure NGINX ─────────────
- stage: AnsibleConfigure
  dependsOn: TerraformApply
  condition: succeeded()
  jobs:
    - job: AnsibleJob
      displayName: "Configure NGINX using Ansible"
      steps:
        - checkout: self

        - script: |
            sudo apt update
            sudo apt install -y ansible
            ansible --version
          displayName: "Install Ansible"

        - script: |
            cd $(ansible_folder)
            ansible-playbook -i inventory site.yml
          displayName: "Run NGINX Ansible Playbook"

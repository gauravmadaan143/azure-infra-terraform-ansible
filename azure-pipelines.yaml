trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.6.6'
  terraform_folder: 'terraform'
  ansible_folder: 'ansible'
  location: 'westeurope'
  resource_group: 'demo-rg'
  vm_name: 'demo-vm'
  ssh_public_key: 'ssh-rsa AAAAB3Nza...YOUR_KEY...== gauravmadaan143@gmail.com'
  my_ip_address: '89.64.12.157/32'

jobs:
- job: DeployInfra
  displayName: "Terraform + Ansible Deployment"
  steps:
    - checkout: self

    # ‚úÖ Install Terraform CLI
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: "$(terraformVersion)"

    # ‚úÖ Export ARM_* variables from Azure Service Connection
    - task: AzureCLI@2
      displayName: "Extract ARM credentials"
      inputs:
        azureSubscription: 'terraform-spn'  # üîÅ Replace with your actual service connection name
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
          echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$servicePrincipalKey"
          echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
          echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"

    # ‚úÖ Terraform Init
    - task: Bash@3
      displayName: "Terraform Init"
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
      inputs:
        targetType: inline
        script: |
          cd $(Build.SourcesDirectory)/$(terraform_folder)
          terraform init

    # ‚úÖ Terraform Plan
    - task: Bash@3
      displayName: "Terraform Plan"
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
      inputs:
        targetType: inline
        script: |
          cd $(Build.SourcesDirectory)/$(terraform_folder)
          terraform plan \
            -var="location=$(location)" \
            -var="resource_group_name=$(resource_group)" \
            -var="vm_name=$(vm_name)" \
            -var="ssh_public_key=$(ssh_public_key)" \
            -var="my_ip_address=$(my_ip_address)"

    # ‚úÖ Terraform Apply
    - task: Bash@3
      displayName: "Terraform Apply"
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
      inputs:
        targetType: inline
        script: |
          cd $(Build.SourcesDirectory)/$(terraform_folder)
          terraform apply -auto-approve \
            -var="location=$(location)" \
            -var="resource_group_name=$(resource_group)" \
            -var="vm_name=$(vm_name)" \
            -var="ssh_public_key=$(ssh_public_key)" \
            -var="my_ip_address=$(my_ip_address)"

    # ‚úÖ Ansible Install & Run
    - task: Bash@3
      displayName: "Install & Run Ansible"
      inputs:
        targetType: inline
        script: |
          sudo apt-get update
          sudo apt-get install -y ansible
          cd $(Build.SourcesDirectory)/$(ansible_folder)
          ansible-playbook -i inventory playbook.yaml

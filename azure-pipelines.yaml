trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: Terraform-SP-Creds
- name: terraformVersion
  value: '1.6.6'
- name: terraform_folder
  value: 'terraform'
- name: ansible_folder
  value: 'ansible'
- name: location
  value: 'westeurope'
- name: resource_group_name
  value: 'demo-rg'
- name: vm_name
  value: 'demo-vm'
- name: ssh_public_key
  value: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDSgIiTUaJttDCYf0wLHqiSnq00iwH5RFFa8ukJiug+qdK0kgjKgtoABgJxF3nyXKoaFEuEq1+90ZtqEt7oQGMSaFGryhggGrNOdPSq3ZuLqlpBiiiH1aSQHxmPkOjLUR4y2jIh6pXL4VvEHRvXrf6woFeU+17wWalo+22RUs1iTvvJvBac9UytDnv6vIjujr4ALGqL9eBnss6Kk/dOifWx0lutFMJxTDYXOPtUOKuSBn3ZX+HGNtLHb2KViL29jbpqwu0kF23KBpUeds8YIYvKJkRci8S8s2U+WQliDqYzRGC87qCEYh43nS+5owGIeYTl3xt2tZFR0EjPdTm7s2Me+z6Pr7JYd17Q9E+m4cC0a+MQK3W/cOVl4/zD+2K5y1bfMovQ2OK2Bz/lyvsE29jtauL9ULa8KZ/81szYc9vV6dPD6602gdZ0Q5WwCE7jvzzC0ZfJeZ//Jtt4jlGc8Gg2av9QITvEMxmGEQDltPB4E9SIrodyrIV/CarXPteYQWyAAg+I1Nf+nX7esalLVAmincxnCW3YstZaO50N1djMd65ulaIJIrjoTbPVia9YKixeQAKb9RyFhkp6OjNNrNOD9GSyBNrT2bfBrqQ4LrRiPedRHEttX64lBJesxNImeCbpl96cqnAR+mHYG+78I4EzLL/6JTVI/M6dG3gvijho6Q== gauravmadaan143@gmail.com'
<<<<<<< HEAD
- name: my_ip_address
  value: '89.64.12.157'
=======
>>>>>>> 577370556b468de21130f1a72ff4cb57a92d02b4

jobs:
- job: DeployInfra
  displayName: "Terraform + Ansible Deployment"
  steps:
    - checkout: self

    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: "$(terraformVersion)"

    - task: Bash@3
      displayName: "Terraform Init"
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
      inputs:
        targetType: inline
        script: |
          cd $(Build.SourcesDirectory)/$(terraform_folder)
          terraform init

    - task: Bash@3
      displayName: "Terraform Plan"
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
      inputs:
        targetType: inline
        script: |
          cd $(Build.SourcesDirectory)/$(terraform_folder)
          terraform plan \
            -var="location=$(location)" \
            -var="resource_group_name=$(resource_group_name)" \
            -var="vm_name=$(vm_name)" \
            -var="ssh_public_key=$(ssh_public_key)" \
            -var="my_ip_address=$(my_ip_address)" \
            -var="client_id=$(ARM_CLIENT_ID)" \
            -var="client_secret=$(ARM_CLIENT_SECRET)" \
            -var="subscription_id=$(ARM_SUBSCRIPTION_ID)" \
            -var="tenant_id=$(ARM_TENANT_ID)"

    - task: Bash@3
      displayName: "Terraform Apply"
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
      inputs:
        targetType: inline
        script: |
          cd $(Build.SourcesDirectory)/$(terraform_folder)
          terraform apply -auto-approve \
            -var="location=$(location)" \
            -var="resource_group_name=$(resource_group_name)" \
            -var="vm_name=$(vm_name)" \
            -var="ssh_public_key=$(ssh_public_key)" \
            -var="my_ip_address=$(my_ip_address)" \
            -var="client_id=$(ARM_CLIENT_ID)" \
            -var="client_secret=$(ARM_CLIENT_SECRET)" \
            -var="subscription_id=$(ARM_SUBSCRIPTION_ID)" \
            -var="tenant_id=$(ARM_TENANT_ID)"

    - task: Bash@3
      displayName: "Install & Run Ansible"
      inputs:
        targetType: inline
        script: |
          sudo apt-get update
          sudo apt-get install -y ansible
          cd $(Build.SourcesDirectory)/$(ansible_folder)
          ansible-playbook -i inventory playbook.yaml


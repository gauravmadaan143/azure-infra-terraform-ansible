trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.6.6'
  resource_group: 'demo-rg'
  vm_name: 'demo-vm'
  location: 'westeurope'
  terraform_folder: 'terraform'
  ansible_folder: 'ansible'
  ssh_public_key: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDSgIiTUaJttDCYf0wLHqiSnq00iwH5RFFa8ukJiug+qdK0kgjKgtoABgJxF3nyXKoaFEuEq1+90ZtqEt7oQGMSaFGryhggGrNOdPSq3ZuLqlpBiiiH1aSQHxmPkOjLUR4y2jIh6pXL4VvEHRvXrf6woFeU+17wWalo+22RUs1iTvvJvBac9UytDnv6vIjujr4ALGqL9eBnss6Kk/dOifWx0lutFMJxTDYXOPtUOKuSBn3ZX+HGNtLHb2KViL29jbpqwu0kF23KBpUeds8YIYvKJkRci8S8s2U+WQliDqYzRGC87qCEYh43nS+5owGIeYTl3xt2tZFR0EjPdTm7s2Me+z6Pr7JYd17Q9E+m4cC0a+MQK3W/cOVl4/zD+2K5y1bfMovQ2OK2Bz/lyvsE29jtauL9ULa8KZ/81szYc9vV6dPD6602gdZ0Q5WwCE7jvzzC0ZfJeZ//Jtt4jlGc8Gg2av9QITvEMxmGEQDltPB4E9SIrodyrIV/CarXPteYQWyAAg+I1Nf+nX7esalLVAmincxnCW3YstZaO50N1djMd65ulaIJIrjoTbPVia9YKixeQAKb9RyFhkp6OjNNrNOD9GSyBNrT2bfBrqQ4LrRiPedRHEttX64lBJesxNImeCbpl96cqnAR+mHYG+78I4EzLL/6JTVI/M6dG3gvijho6Q== gauravmadaan143@gmail.com'

steps:

# 1. Install Terraform CLI locally and add to PATH
- bash: |
    echo "Installing Terraform locally..."
    rm -rf terraform terraform.zip
    curl -sLo terraform.zip https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
    unzip terraform.zip
    chmod +x terraform
    mkdir -p $(Pipeline.Workspace)/bin
    mv terraform $(Pipeline.Workspace)/bin/
    echo "##vso[task.prependpath]$(Pipeline.Workspace)/bin"
    terraform -version
  displayName: 'Install Terraform CLI'

# 2. Terraform Init
- bash: |
    cd $(terraform_folder)
    terraform init
  displayName: 'Terraform Init'

# 3. Terraform Plan
- bash: |
    cd $(terraform_folder)
    terraform plan \
      -var="location=$(location)" \
      -var="resource_group_name=$(resource_group)" \
      -var="vm_name=$(vm_name)" \
      -var="ssh_public_key=$(ssh_public_key)"
  displayName: 'Terraform Plan'

# 4. Terraform Apply
- bash: |
    cd $(terraform_folder)
    terraform apply -auto-approve \
      -var="location=$(location)" \
      -var="resource_group_name=$(resource_group)" \
      -var="vm_name=$(vm_name)" \
      -var="ssh_public_key=$(ssh_public_key)"
  displayName: 'Terraform Apply'

# 5. Install Ansible and Run Playbook
- bash: |
    sudo apt-get update
    sudo apt-get install -y ansible
    ansible --version
    cd $(ansible_folder)
    ansible-playbook -i inventory site.yml
  displayName: 'Configure NGINX via Ansible'

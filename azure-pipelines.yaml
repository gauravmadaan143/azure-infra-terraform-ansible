trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.6.6'
  terraform_folder: 'terraform'
  ansible_folder: 'ansible'
  location: 'westeurope'
  resource_group: 'demo-rg'
  vm_name: 'demo-vm'
  ssh_public_key: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDSgIiTUaJttDCYf0wLHqiSnq00iwH5RFFa8ukJiug+qdK0kgjKgtoABgJxF3nyXKoaFEuEq1+90ZtqEt7oQGMSaFGryhggGrNOdPSq3ZuLqlpBiiiH1aSQHxmPkOjLUR4y2jIh6pXL4VvEHRvXrf6woFeU+17wWalo+22RUs1iTvvJvBac9UytDnv6vIjujr4ALGqL9eBnss6Kk/dOifWx0lutFMJxTDYXOPtUOKuSBn3ZX+HGNtLHb2KViL29jbpqwu0kF23KBpUeds8YIYvKJkRci8S8s2U+WQliDqYzRGC87qCEYh43nS+5owGIeYTl3xt2tZFR0EjPdTm7s2Me+z6Pr7JYd17Q9E+m4cC0a+MQK3W/cOVl4/zD+2K5y1bfMovQ2OK2Bz/lyvsE29jtauL9ULa8KZ/81szYc9vV6dPD6602gdZ0Q5WwCE7jvzzC0ZfJeZ//Jtt4jlGc8Gg2av9QITvEMxmGEQDltPB4E9SIrodyrIV/CarXPteYQWyAAg+I1Nf+nX7esalLVAmincxnCW3YstZaO50N1djMd65ulaIJIrjoTbPVia9YKixeQAKb9RyFhkp6OjNNrNOD9GSyBNrT2bfBrqQ4LrRiPedRHEttX64lBJesxNImeCbpl96cqnAR+mHYG+78I4EzLL/6JTVI/M6dG3gvijho6Q== gauravmadaan143@gmail.com'

jobs:
- job: TerraformAndAnsible
  displayName: "Terraform + Ansible Job"
  steps:
    - checkout: self

    # ✅ Install Terraform CLI Locally in a safe path
    - bash: |
        set -e
        echo "Installing Terraform v$(terraformVersion)..."
        mkdir -p $(Build.SourcesDirectory)/bin
        cd $(Build.SourcesDirectory)/bin
        curl -sSLo terraform.zip https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
        unzip -o terraform.zip
        chmod +x terraform
        echo "##vso[task.prependpath]$(Build.SourcesDirectory)/bin"
        terraform -version
      displayName: "Install Terraform CLI"

    # ✅ Terraform Init
    - bash: |
        set -e
        cd $(Build.SourcesDirectory)/$(terraform_folder)
        terraform init
      displayName: "Terraform Init"

    # ✅ Terraform Plan
    - bash: |
        set -e
        cd $(Build.SourcesDirectory)/$(terraform_folder)
        terraform plan \
          -var="location=$(location)" \
          -var="resource_group_name=$(resource_group)" \
          -var="vm_name=$(vm_name)" \
          -var="ssh_public_key=$(ssh_public_key)"
      displayName: "Terraform Plan"

    # ✅ Terraform Apply
    - bash: |
        set -e
        cd $(Build.SourcesDirectory)/$(terraform_folder)
        terraform apply -auto-approve \
          -var="location=$(location)" \
          -var="resource_group_name=$(resource_group)" \
          -var="vm_name=$(vm_name)" \
          -var="ssh_public_key=$(ssh_public_key)"
      displayName: "Terraform Apply"

    # ✅ Ansible Install + Run Playbook
    - bash: |
        set -e
        sudo apt-get update
        sudo apt-get install -y ansible
        cd $(Build.SourcesDirectory)/$(ansible_folder)
        ansible-playbook -i inventory playbook.yaml
      displayName: "Configure NGINX via Ansible"

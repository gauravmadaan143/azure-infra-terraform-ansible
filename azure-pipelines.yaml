trigger:
- main

variables:
  terraformVersion: '1.6.6'

stages:
- stage: Terraform
  displayName: "Terraform Deployment"
  jobs:
  - job: TerraformJob
    displayName: "Terraform Execution"
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - bash: |
        echo "Installing Terraform version ${terraformVersion}"
        
        set -e  # Stop on first error
        mkdir -p $HOME/bin
        
        # Download and validate the zip
        curl -sSLo terraform.zip https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
        
        if ! unzip -t terraform.zip >/dev/null 2>&1; then
          echo "❌ Invalid ZIP file downloaded!"
          cat terraform.zip  # Debug contents (likely an HTML error page)
          exit 1
        fi

        unzip -o terraform.zip
        chmod +x terraform
        mv terraform $HOME/bin/
        echo "##vso[task.prependpath]$HOME/bin"

        echo "✅ Terraform installed:"
        terraform -version
      displayName: 'Install Terraform CLI with validation'

    - bash: terraform init
      displayName: 'Terraform Init'

    - bash: terraform plan -out=tfplan
      displayName: 'Terraform Plan'

    - bash: terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'

- stage: Ansible
  displayName: "Ansible Deployment"
  dependsOn: Terraform
  jobs:
  - job: AnsibleJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: |
        echo "Running Ansible..."
        sudo apt update && sudo apt install -y ansible
        # Customize with your playbook/inventory path
        ansible-playbook site.yml -i inventory
      displayName: 'Run Ansible Playbook'
